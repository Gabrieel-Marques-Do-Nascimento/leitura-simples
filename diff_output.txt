diff --git a/css/style.css b/css/style.css
index 9b4d75e..a988889 100644
--- a/css/style.css
+++ b/css/style.css
@@ -75,6 +75,12 @@ header {
     width: 80%;
     height: 30px;
 }
+
+.inputmarkdowStyle {
+    margin: 20px 0;
+    width: 80%;
+    height: 30px;
+}
 #clearBtn {
   position: fixed;
   left: 80%;
@@ -187,12 +193,24 @@ body {
     transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Transições suaves ao focar */
 }
 
-
+.inputmarkdowStyle  {
+    width: 80%;
+    padding: 10px 15px; /* Espaço interno para melhorar a experiência de digitação */
+    font-size: 18px; /* Aumentar o tamanho da fonte */
+    border: 2px solid #ccc; /* Borda mais visível */
+    border-radius: 8px; /* Bordas arredondadas */
+    outline: none; /* Remove o contorno padrão ao focar */
+    transition: border-color 0.3s ease, box-shadow 0.3s ease; /* Transições suaves ao focar */
+}
 /* Estilo quando o input recebe foco */
 #ler:focus {
     border-color: #007bff; /* Cor azul ao focar */
     box-shadow: 0 0 8px rgba(0, 123, 255, 0.5); /* Adiciona uma leve sombra azul ao redor */
 }
+.inputmarkdowStyle:focus {
+    border-color: #007bff; /* Cor azul ao focar */
+    box-shadow: 0 0 8px rgba(0, 123, 255, 0.5); /* Adiciona uma leve sombra azul ao redor */
+}
 /* Efeito hover no botão */
 #start:hover {
     background-color: #0056b3;
@@ -349,7 +367,13 @@ body {
         font-size: 22px; /* Fonte menor em telas menores */
         padding: 10px;
     }
-
+    .inputmarkdowStyle {
+      z-index: 4;
+        width: 80%; /* O input ocupa toda a largura no celular */
+        height: 40px;
+        font-size: 22px; /* Fonte menor em telas menores */
+        padding: 10px;
+    }
     #start {
       z-index: 4;
         width: 50%; /* O botão ocupa toda a largura disponível */
@@ -449,9 +473,9 @@ body {
   display: none;
   z-index: 5;
   position: fixed;
-  
+  top: 20px;
   left: 10%;
-  align-items: start;
+  align-items: flex-start;
   color: white;
   background-color: rgba(0, 0, 0, 0.819);
   width: 80%;
diff --git a/index.html b/index.html
index d965a63..423f8b4 100644
--- a/index.html
+++ b/index.html
@@ -53,6 +53,7 @@
                <p id="console-text"></p>
           </div>
           <header>
+              <textarea class="inputmarkdowStyle" id="inputMarkdow"></textarea>
                <input type="text" name="ler" id="ler" aria-label="ler" />
                <button id="clearBtn">
                     <svg
@@ -316,7 +317,7 @@
                               style="font-size: 12px"
                               translate="no"
                               name="type"
-                              id="type"
+                              id="text_type"
                          >
                               <option value="markdow">markdow</option>
                               <option value="text">text</option>
@@ -564,12 +565,14 @@
                     explorador
                </div>
           </div>
+          <script type="module" src="js/testes.js"></script>
           <script src="js/Premium.js"></script>
           <script type="module" src="js/script.js"></script>
           <script type="module" src="js/module.js"></script>
           <script type="module" src="js/files.js"></script>
           <script type="module" src="js/settings.js"></script>
           <script type="module" src="js/scroll.js"></script>
+
           <script type="module" src="js/utils.js"></script>
           <script type="module" src="js/player.js"></script>
           <script type="module" src="js/events.js"></script>
diff --git a/js/script.js b/js/script.js
index 678d7b0..d8d1ca9 100644
--- a/js/script.js
+++ b/js/script.js
@@ -1,6 +1,7 @@
 // ------------------------------- Importações de Módulos -------------------------------
-
+import {texto_teste, add_value} from "./testes.js";
 // ------------------------------- Elementos do DOM -------------------------------
+const inputActived = document.getElementsByClassName("inputClass");
 export const $CloseMenuSettings = document.getElementById("CloseMenuSettings");
 export const $SettingBookMarkColor = document.getElementById("bookmark");
 export const $SettingPageLang = document.getElementById("lang");
@@ -9,11 +10,12 @@ export const $SettingAutoScroll = document.getElementById("autoScroll");
 export const $SettingButton = document.getElementById("settingbutton");
 export const $SettingsMenu = document.getElementById("setingsmenu");
 export const $settingTheme = document.getElementById("theme");
-export const SettingText_marker = document.getElementById("marcador");
+export const $SettingText_marker = document.getElementById("marcador");
 export const $settingsFontSize = document.getElementById("settings-font-size");
 export const $SettingText_type = document.getElementById("text_type");
 // principal screen
 export const $clearButtonFromInput = document.getElementById("clearBtn");
+export const $inputMarkdow = document.getElementById("inputMarkdow");
 export const $input = document.getElementById("ler");
 export const $screen_text = document.getElementById("paragraph");
 export const $pai_das_telas = document.getElementById("pai");
@@ -34,8 +36,9 @@ export const $buttons = document.querySelectorAll(".scrollbt");
 // ------------------------------- Variáveis de Controle e Estado -------------------------------
 export const Cache_json_name = "settings_data";
 export const SettingData = loadText_Cache_json(Cache_json_name);
+export const inputClass = "inputClass";
 // ------------------------------ LOGS---------------------------------------------------------
-
+console.log("SettingData",SettingData);
 // ------------------------------- Funções para Manuseio de Texto -------------------------------
 //================================================
 /**
@@ -63,7 +66,7 @@ export function load_text_from_cache(name) {
      const savedText = localStorage.getItem(name);
      if (savedText) {
           style_sec("block", "block", "none", "none", savedText);
-          $input.value = savedText;
+          inputActived.value = savedText;
           return savedText;
      }
 }
@@ -113,4 +116,37 @@ export function loadText_Cache_json(name) {
 
 // ------------------------------- Funções de Scroll e Movimento -------------------------------
 
-// ------------------------------- Configuração Inicial e Eventos de Interface -------------------------------
+// ------------------------------- Configuração Inicial  -------------------------------
+
+
+
+
+// ---------------------------------    Eventos de Interface         -----------------------------
+
+document.addEventListener("DOMContentLoaded", function() {
+    
+    // Seu código aqui
+   // ------------------------------- area de testes S---------------------------------------------------------
+
+  //inputMarkdow.value = texto_teste;
+ inputActived[0].value = texto_teste; 
+console.log("inputClass",inputMarkdow[0].value);
+
+ 
+    
+    
+    
+    
+    
+    
+});
+// DOMContentLoaded
+$clearButtonFromInput.addEventListener("click", function () {
+  // console.log(inputActived)
+  inputActived[0].value = ""
+});
+
+
+
+
+
diff --git a/js/settings.js b/js/settings.js
index 24d9085..4e4b8f1 100644
--- a/js/settings.js
+++ b/js/settings.js
@@ -4,19 +4,47 @@ import {
      $CloseMenuSettings,
      $settingsFontSize,
      save_json_to_cache,
-     loadText_Cache_json,
      Cache_json_name,
+     loadText_Cache_json,
      $SettingText_type,
-     SettingData,
      $SettingBookMarkColor,
      $SettingDelay,
      $SettingAutoScroll,
      $settingTheme,
-    
+     inputClass,
      $screen_text,
-     $SettingPageLang
+     $SettingPageLang,
+     $input,
+     $inputMarkdow,
+     
 } from "./script.js";
+import {log_list} from "./testes.js";
+import {recarregarPagina} from "./utils.js";
+// ------------------------------- Configuração Inicial e tipo de tela -------------------------------
+let SettingData = loadText_Cache_json(Cache_json_name)
+if (SettingData["screentype"] === "text"){
+   
+   $input.style.display = "block";
+   $input.classList.add(inputClass);
+   $inputMarkdow.classList.remove(inputClass);
+   $inputMarkdow.style.display = "none";
+   
+ }
+if ( SettingData["screentype"] === "markdow"){
+  
+  $input.style.display = "none";
+  $input.classList.remove(inputClass)
+   $inputMarkdow.style.display = "block";
+   $inputMarkdow.classList.add(inputClass)
+}
 
+document.addEventListener("DOMContentLoaded", function () {
+  
+// function onload
+});
+
+// ------------------------------- Variáveis de Controle e Estado -------------------------------
+export const $inpuClear = document.getElementsByClassName(inputClass)
 // ------------------------------- Configuração Inicial e Eventos de Interface -------------------------------
 
 // abre o menu de configurações
@@ -40,7 +68,7 @@ $CloseMenuSettings.addEventListener("click", () => {
      $SettingButton.style.display = "block";
      let font_size =
           Number($settingsFontSize.value) > 12 ? $settingsFontSize.value : 12;
-     console.log(font_size);
+     console.log("font_size",font_size);
      $screen_text.style.fontSize = font_size + "px";
     // salva os dados de configurações
     const confger = {
@@ -52,6 +80,15 @@ $CloseMenuSettings.addEventListener("click", () => {
         theme: $settingTheme.value,
         $autoScroll: $SettingAutoScroll.checked,
         color: $SettingBookMarkColor.value,
-        "screentype": $settscree
+        "screentype": $SettingText_type.value
       };
+      save_json_to_cache(confger, Cache_json_name)
+      recarregarPagina()
 });
+
+
+
+
+
+
+// ------------------------------- area de testes -------------------------------
\ No newline at end of file
diff --git a/js/utils.js b/js/utils.js
index e69de29..ab87e4a 100644
--- a/js/utils.js
+++ b/js/utils.js
@@ -0,0 +1,88 @@
+export function buttonstatic(buttons, estado) {
+  // loop
+  buttons.forEach((button) => {
+    button.style.display = estado;
+  });
+}
+
+export function scrollarline(pixel) {
+  highlight.scrollTo({
+    top: pixel,
+    behavior: "smooth",
+  });
+}
+
+/**
+ * recarregar a pagina
+ */
+export function recarregarPagina() {
+  location.reload();
+}
+
+export function move_marcador(line) {
+  // Pegue o valor do line-height
+  var linha = line
+    ? Number(paragrafo_style.lineHeight.replace("px", ""))
+    : -Number(paragrafo_style.lineHeight.replace("px", ""));
+
+  alterarTop(Number(highlight_estilo.top.replace("px", "")) + linha, 8, linha);
+  highlight.style.transition = "top 0.1s ease";
+}
+
+// pequena pagina que mostra alguns logs
+const $console_user = document.getElementById("console");
+const $console_text = document.getElementById("console-text");
+$console_user.addEventListener("click", function () {
+  $console_text.style.display = "block";
+  $console_user.style = `top: 100px;
+                        left: 10%;
+                        height:50%;
+                        width: 80%;`;
+});
+$console_user.addEventListener("dblclick", function () {
+  $console_user.style = `        top: 0px;           
+                                height: 18px;
+                                width: 40px;`;
+  $console_text.style.display = "none";
+});
+
+export function loger(text) {
+  $console_text.innerHTML += text + "</br>";
+}
+
+export function console_log(text, view = false) {
+  if (view) {
+    console.log(text);
+  }
+}
+
+
+export async function traduzirTexto(texto, idiomaAlvo) {
+    const url = "https://libretranslate.com/translate";
+
+    const response = await fetch(url, {
+        method: "POST",
+        headers: {
+            "Content-Type": "application/json",
+            "Accept": "application/json"
+        },
+        body: JSON.stringify({
+            q: texto,
+            source: "auto", // Detecta automaticamente o idioma de entrada
+            target: idiomaAlvo
+        }),
+    });
+
+    const data = await response.json();
+    if (data.error) {
+        console.error("Erro na tradução:", data.error);
+        return null;
+    }
+    
+    return data.translatedText;
+}
+
+// Exemplo de uso
+// traduzirTexto("Olá, como vai?", "en")
+//    .then(traducao => console.log(traducao))
+//    .catch(error => console.error("Erro:", error));
\ No newline at end of file
diff --git a/service-worker.js b/service-worker.js
index 6c4e370..ff7a839 100644
--- a/service-worker.js
+++ b/service-worker.js
@@ -1,4 +1,11 @@
-const cacheName = 'site-cache-v2';
+let cacheName = ""; 
+fetch('./config.json')
+  .then(response => response.json())
+  .then(config => {
+    cacheName = config.service_worker_name
+    console.log(config.API_KEY); // your_api_key
+  });
+
 const filesToCachegIT = [
     '/leitura-simples/',         // Raiz   
     // '/img/cursor.svg',       // Arquivos SVG e PNG
