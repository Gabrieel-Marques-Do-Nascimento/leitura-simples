import{$input as e,inputActived as o,$screen_text as t,Cache_screen_name as r}from"./script.js";import{buttonstatic as n,save_text_in_cache as d,ReadScreen as a,delay as l,recarregarPagina as c}from"./utils.js";export const fileInput=document.getElementById("fileInput");export const dropZone=document.getElementById("dropZone");function i(e){return new Promise(((o,t)=>{if(e&&["text/plain","text/markdown"].includes(e.type)||/\.(txt|md)$/i.test(e.name)){const r=new FileReader;r.onload=function(e){o(e.target.result)},r.onerror=function(){dropZone.style.color="red",dropZone.textContent="Erro ao ler o arquivo.",t("Erro ao ler o arquivo")},r.readAsText(e,"UTF-8")}else dropZone.style.color="red",dropZone.textContent="Por favor, escolha um arquivo de texto (.txt) válido.",t("Arquivo inválido")}))}["dragenter","dragover"].forEach((e=>{dropZone.addEventListener(e,(()=>dropZone.classList.add("hover")))})),["dragleave","drop"].forEach((e=>{dropZone.addEventListener(e,(()=>dropZone.classList.remove("hover")))})),dropZone.addEventListener("click",(()=>fileInput.click())),fileInput.addEventListener("change",(async e=>{try{let t=await i(e.target.files[0]);a(t),d(t,r),l(1e3),n(document.querySelectorAll(".disabled"),"none"),n(document.querySelectorAll(" .activated"),"block"),o[0].value=t,c()}catch(e){console.error(e)}})),["dragenter","dragover","dragleave","drop"].forEach((e=>{dropZone.addEventListener(e,(e=>e.preventDefault()))})),dropZone.addEventListener("drop",(async e=>{try{const t=e.dataTransfer.files[0];let l=await i(t);o[0].value=l;let c=d(l,r);a(l),c&&(n(document.querySelectorAll(".disabled"),"none"),n(document.querySelectorAll(" .activated"),"block"))}catch(e){console.error(e)}}));